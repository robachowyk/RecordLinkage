// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// F2
List F2(IntegerVector U, int nvals);
RcppExport SEXP _RecLinkSurv_F2(SEXP USEXP, SEXP nvalsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type U(USEXP);
    Rcpp::traits::input_parameter< int >::type nvals(nvalsSEXP);
    rcpp_result_gen = Rcpp::wrap(F2(U, nvals));
    return rcpp_result_gen;
END_RCPP
}
// F33
IntegerMatrix F33(List A, List B, int nvals);
RcppExport SEXP _RecLinkSurv_F33(SEXP ASEXP, SEXP BSEXP, SEXP nvalsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type A(ASEXP);
    Rcpp::traits::input_parameter< List >::type B(BSEXP);
    Rcpp::traits::input_parameter< int >::type nvals(nvalsSEXP);
    rcpp_result_gen = Rcpp::wrap(F33(A, B, nvals));
    return rcpp_result_gen;
END_RCPP
}
// sspaste2
CharacterVector sspaste2(IntegerMatrix A);
RcppExport SEXP _RecLinkSurv_sspaste2(SEXP ASEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type A(ASEXP);
    rcpp_result_gen = Rcpp::wrap(sspaste2(A));
    return rcpp_result_gen;
END_RCPP
}
// sampleD
List sampleD(IntegerMatrix S, NumericVector LLA, NumericVector LLB, arma::sp_mat LLM, NumericVector pi, double loglik, arma::sp_mat D, int nmatches, LogicalVector sumRowD, LogicalVector sumColD);
RcppExport SEXP _RecLinkSurv_sampleD(SEXP SSEXP, SEXP LLASEXP, SEXP LLBSEXP, SEXP LLMSEXP, SEXP piSEXP, SEXP loglikSEXP, SEXP DSEXP, SEXP nmatchesSEXP, SEXP sumRowDSEXP, SEXP sumColDSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerMatrix >::type S(SSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type LLA(LLASEXP);
    Rcpp::traits::input_parameter< NumericVector >::type LLB(LLBSEXP);
    Rcpp::traits::input_parameter< arma::sp_mat >::type LLM(LLMSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pi(piSEXP);
    Rcpp::traits::input_parameter< double >::type loglik(loglikSEXP);
    Rcpp::traits::input_parameter< arma::sp_mat >::type D(DSEXP);
    Rcpp::traits::input_parameter< int >::type nmatches(nmatchesSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type sumRowD(sumRowDSEXP);
    Rcpp::traits::input_parameter< LogicalVector >::type sumColD(sumColDSEXP);
    rcpp_result_gen = Rcpp::wrap(sampleD(S, LLA, LLB, LLM, pi, loglik, D, nmatches, sumRowD, sumColD));
    return rcpp_result_gen;
END_RCPP
}
// sampleNM
IntegerVector sampleNM(IntegerVector X, double mu, double eta, NumericVector pTrue);
RcppExport SEXP _RecLinkSurv_sampleNM(SEXP XSEXP, SEXP muSEXP, SEXP etaSEXP, SEXP pTrueSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type X(XSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pTrue(pTrueSEXP);
    rcpp_result_gen = Rcpp::wrap(sampleNM(X, mu, eta, pTrue));
    return rcpp_result_gen;
END_RCPP
}
// sampleNM2
IntegerVector sampleNM2(int X, double mu, double eta, NumericVector pTrue, int n);
RcppExport SEXP _RecLinkSurv_sampleNM2(SEXP XSEXP, SEXP muSEXP, SEXP etaSEXP, SEXP pTrueSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type X(XSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pTrue(pTrueSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(sampleNM2(X, mu, eta, pTrue, n));
    return rcpp_result_gen;
END_RCPP
}
// sampleM
IntegerVector sampleM(IntegerVector A, IntegerVector B, NumericVector pTrue, double mu, NumericVector eta);
RcppExport SEXP _RecLinkSurv_sampleM(SEXP ASEXP, SEXP BSEXP, SEXP pTrueSEXP, SEXP muSEXP, SEXP etaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type A(ASEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type B(BSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pTrue(pTrueSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type eta(etaSEXP);
    rcpp_result_gen = Rcpp::wrap(sampleM(A, B, pTrue, mu, eta));
    return rcpp_result_gen;
END_RCPP
}
// left
int left(double t, NumericVector knots);
RcppExport SEXP _RecLinkSurv_left(SEXP tSEXP, SEXP knotsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type knots(knotsSEXP);
    rcpp_result_gen = Rcpp::wrap(left(t, knots));
    return rcpp_result_gen;
END_RCPP
}
// dpiecelin
NumericVector dpiecelin(NumericVector x, NumericVector w, NumericVector b);
RcppExport SEXP _RecLinkSurv_dpiecelin(SEXP xSEXP, SEXP wSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type w(wSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(dpiecelin(x, w, b));
    return rcpp_result_gen;
END_RCPP
}
// Hfunc
NumericVector Hfunc(NumericVector t, NumericVector knots, NumericVector params);
RcppExport SEXP _RecLinkSurv_Hfunc(SEXP tSEXP, SEXP knotsSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type t(tSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type knots(knotsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type params(paramsSEXP);
    rcpp_result_gen = Rcpp::wrap(Hfunc(t, knots, params));
    return rcpp_result_gen;
END_RCPP
}
// hfunc
NumericVector hfunc(NumericVector t, NumericVector knots, NumericVector params);
RcppExport SEXP _RecLinkSurv_hfunc(SEXP tSEXP, SEXP knotsSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type t(tSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type knots(knotsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type params(paramsSEXP);
    rcpp_result_gen = Rcpp::wrap(hfunc(t, knots, params));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RecLinkSurv_F2", (DL_FUNC) &_RecLinkSurv_F2, 2},
    {"_RecLinkSurv_F33", (DL_FUNC) &_RecLinkSurv_F33, 3},
    {"_RecLinkSurv_sspaste2", (DL_FUNC) &_RecLinkSurv_sspaste2, 1},
    {"_RecLinkSurv_sampleD", (DL_FUNC) &_RecLinkSurv_sampleD, 10},
    {"_RecLinkSurv_sampleNM", (DL_FUNC) &_RecLinkSurv_sampleNM, 4},
    {"_RecLinkSurv_sampleNM2", (DL_FUNC) &_RecLinkSurv_sampleNM2, 5},
    {"_RecLinkSurv_sampleM", (DL_FUNC) &_RecLinkSurv_sampleM, 5},
    {"_RecLinkSurv_left", (DL_FUNC) &_RecLinkSurv_left, 2},
    {"_RecLinkSurv_dpiecelin", (DL_FUNC) &_RecLinkSurv_dpiecelin, 3},
    {"_RecLinkSurv_Hfunc", (DL_FUNC) &_RecLinkSurv_Hfunc, 3},
    {"_RecLinkSurv_hfunc", (DL_FUNC) &_RecLinkSurv_hfunc, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_RecLinkSurv(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
